{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ploot\\\\PersonalWebsiteProject\\\\paulb\\\\src\\\\copytext.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CopyToClipboardText = ({\n  children\n}) => {\n  _s();\n  const [isCopied, setIsCopied] = useState(false);\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      setIsCopied(true);\n    }).catch(err => console.error('Failed to copy text: ', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => copyToClipboard(children),\n    children: [children, isCopied && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'green'\n      },\n      children: \" Copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(CopyToClipboardText, \"dIAMLjsduWkZ4KaA+ylUo0FLqmM=\");\n_c = CopyToClipboardText;\nexport default CopyToClipboardText;\nvar _c;\n$RefreshReg$(_c, \"CopyToClipboardText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CopyToClipboardText","children","_s","isCopied","setIsCopied","copyToClipboard","text","navigator","clipboard","writeText","then","catch","err","console","error","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ploot/PersonalWebsiteProject/paulb/src/copytext.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CopyToClipboardText = ({ children }) => {\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    const copyToClipboard = (text) => {\r\n        navigator.clipboard.writeText(text)\r\n            .then(() => {\r\n                setIsCopied(true);\r\n            })\r\n            .catch(err => console.error('Failed to copy text: ', err));\r\n    };\r\n\r\n    return (\r\n        <div onClick={() => copyToClipboard(children)}>\r\n            {children}\r\n            {isCopied && <span style={{color: 'green'}}> Copied!</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CopyToClipboardText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAC9BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC,CAC9BI,IAAI,CAAC,MAAM;MACRN,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,oBACIb,OAAA;IAAKgB,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAACJ,QAAQ,CAAE;IAAAA,QAAA,GACzCA,QAAQ,EACRE,QAAQ,iBAAIJ,OAAA;MAAMiB,KAAK,EAAE;QAACC,KAAK,EAAE;MAAO,CAAE;MAAAhB,QAAA,EAAC;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd,CAAC;AAACnB,EAAA,CAjBIF,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AAmBzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}